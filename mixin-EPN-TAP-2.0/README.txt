NOTE that epntap2.xml should be renamed to epntap2.rd
(i've named it .xml only so that GitHub highlights it correctly)

this file (epntap2.rd) should probably be placed into 
/usr/share/pyshared/gavo/resources/inputs/__system__/
to make it visible to DaCHS

there is no need to keep epntap2.rd and epntap.rd separate, 
since only <mixinDef id="table"> and <procDef type="apply" id="populate">
need to be changed, and one RD file can have multiple definitions of these
however it may be more convinient to do so at the development stage - 
makes it easier to edit.

I don't understand why does epntap.rd have a column "accref"
<column name="accref" original="//products#products.accref"/>
This exposes my input data table. Is that really necessary? 
Also there is no property accref in specifications for either v1.0 or v2.0. 

Here we have all min/max pairs generated by <STREAM id="_minmax"> 
which is then fed via <FEED>, eg
			<FEED source="_minmax"
				basename="t_sampling_step"
				baseucd="time.interval" unit="s"
				baseutype="Epn.Time.Time_sampling_step"
				basedescr="Sampling time for measurements of dynamical
					phenomena"/>

The defalut values are provided by <mixinPar>, eg
		<mixinPar key="c1unit" description="Unit of the first spatial
			coordinate">deg</mixinPar>
			
I'm confused what does <property key="std">1</property> mean?

New row definitions are taken from this table:
https://voparis-confluence.obspm.fr/display/VES/EPN-TAP+V2.0+parameters

To add control flow to mixin best to use <code> tag...
which can be a child of either <processEarly> or <processLate>
which could be children of <mixinDef>.

<mixinDef> <processEarly code="..."> ... </processEarly> </mixinDef>
grants access to the structure of the mixin as "substrate"
mixin parameters as "mixinPars"
and to parse context as "context"

